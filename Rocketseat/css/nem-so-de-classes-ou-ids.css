/* 1 SELECTORS AND COMBINATORS
1.1 INTRODUÇÃO
	Veremos neste curso como funcionam os combinadores e os seletores do CSS. Além de ver como usar pseudo-classes e pseudo-elements.

1.2 SELETORES

	Seletores é a conexão entre um elemento HTML e o CSS a fim de alterar o elemento, e temos diversos tipos de seletores.
Element selector (seletores de elementos) →
São as tags do HTML, então podemos atribuir um design aquela tag. Exemplo:  */
    h1 {
	    color: red;
	}

    /* ID Selector (seletores de id) →
São seletores por meio do ID, um atributo global do HTML, que colocamos uma identificação na tag. Representamos os seletores de 
id com uma ‘#’ antes do ID. Exemplo:*/
   	#title { 
       background-color: blue;
	}
        
    /* Class selector (seletores de classe) →
São seletores por meio de classes, um atributo global do HTML, que colocamos uma classe nas tags. Lembrando que a diferença entre 
ID e classe é que ID estou me referindo a uma tag específica e classe a uma classe de várias tags. Os seletores de classes são representados 
com um ‘.’ antes da classe. Exemplo: */
	.subtitles {
	    font-weight: 400px;
	}

    /* Attribute selector  (seletores de atributos) →
São seletores por meio dos atributos das tags, ou seja, todas as tags que tiverem este atributo específico terão as propriedades atribuídas. 
São representados por colchetes ‘[ ]’ entre o atributo. Exemplo: */
	[type] {
	    font-size: 2.5vh;
	}

    /* Pseudo-class selector (seletores de pseudo-classes) →
São elementos que têm um estado específico. Trabalharemos melhor os estados mais a frente neste curso. Mas agora nesse exemplo vamos usar o 
estado hover em um elementos, que é o estado de quando passamos o mouse por cima do conteúdo. Exemplo:  */
	p:hover { /* Observem que estou aplicando o estado hover ao elemento p */
	    color: red;
	}

    /* Temos também a opção de realizar múltiplas seleções, assim podemos selecionar múltiplos elementos e aplicar uma regra CSS a eles. 
E usamos uma separação por vírgula ‘,’ para isso. Exemplo: */
	h1, p, a{
	    color:red;
    }


/*    1.3 COMBINATORS 
	Combinadores, pois eles trabalham para buscar e combinar seletores a fim de aplicar uma estilização.
Descendant combinator →
É identificado com espaços entre os seletores.
Busca um elemento dentro de outro
Exemplo:*/
    body article h2{
        color: red; /* Então aqui quero aplicar a cor vermelha no elemento h2 que está em article que, por sua vez, está no body */
    }
/* OBS: Então a regra se aplicará para todos h2 dentro de article mesmo que haja outras tags entre o h2 e o article. */


/*    1.4 CHILD COMBINATOR 
É identificado pelo sinal ‘ > ’ entre dois seletores
Seleciona somente o elemento que é filho direto do pai
Elementos depois do filho direto são desconsiderados 
Exemplo:*/
body > ul > li {
	color: blue; /* Então agora só receberá a cor azul os filhos direto, então se houver tags entre eles a propriedade não será aplicada. */
}


/*  1.5 SIBLING COMBINATOR 
Adjacent Sibling Combinator
Identificado pelo sinal de ‘ + ‘ entre dois elementos
Seleciona somente o elemento irmão direto na hierarquia e estritamente o irmão seguinte somente.
Exemplo: 
<h1>Título</h1>
<p>1º parágrafo</p>
<p>2º parágrafo</p> 
``` CSS ```  */
h1 + p {
	color: red;
} /* Então somente o primeiro parágrafo terá a cor vermelha, pois seleciona somente o irmão direto seguinte. */

/* General Sibling Combinator 
Identificado pelo sinal ‘ ~ ‘ entre dois valores
Seleciona todos elementos irmãos.
Exemplo:
<h1>Título</h1>
<p>1º parágrafo</p>
<p>2º parágrafo</p> 
´´´CSS´´´ */
h1 ~ p {
	color: red;
} /*Então agora os 2 parágrafos terão a cor vermelha pois seleciona todos os irmãos */


/* 1.6 UTILIZANDO COMBINATORS
	Então agora podemos utilizar os combinadores de diversas formas;

ul > li[class=”red”] → desta forma estou destacando todos os li que estão dentro de ul porém somente os que possuem a classe red.

DICAS: Seletores muito específicos tendem a dificultar o reuso das regras de estilização dos elementos. Muitas vezes, um simples 
uso de classe torna o trabalho muito mais eficiente. Podemos utilizar o exemplo acima que apenas criando um classe com a propriedade 
css color: red, já atenderia o caso. */



/* 2 PSEUDO-CLASSES 
2.1 PSEUDO-CLASSES
É um tipo de seletor que irá selecionar um elemento que estiver em um estado específico.
Exemplos: É o primeiro elemento dentro de uma caixa, ou, o elementos está com o ponteiro do mouse em cima dele.
Pseudo-classes começam com 2 pontos, seguido do nome da pseudo class.
`: pseudo-class-name` Sempre em um seletor prévio. */


/* 2.2 FIRST-CHILD
	Um pseudo-classe que se aplicará somente ao primeiro filho. Exemplo: */
		ul li:first-child {
			color: blue;
}
/* OBS: Nesse caso a cor vermelha somente será aplicada se o primeiro filho de ul for um li, se for uma outra tag então não existirá
 um li como first child então não se aplicará. */


/* 2.3 NTH-OF-TYPE
	É um pseudo-classe que me permite selecionar o elemento que quero dentro dos filhos de um elemento, usando entre parênteses, o número do respectivo elemento.
Exemplo: 
<article>
	<h2>Título</h2>
	<p>1º parágrafo</p>
	<p>2º parágrafo</p>
	<p>3º parágrafo</p>
</article> 
``` css ``` */
article p:nth-of-type(2){
	color: violet; /* Assim estou dizendo que quero a cor violeta no segundo parágrafo do meu article. Então dentro do parênteses posso selecionar o número do elemento, que neste caso são os ‘p’. */
}
